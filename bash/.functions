# Create a new directory and enter it
function mkcd() {
  mkdir -p "$@" && cd "$_" || exit;
}

# cd into directory with fzf
fcd() {
  local dir
  dir=$(find ${1:-.} -path '*/\.*' -prune \
                  -o -type d -print 2> /dev/null | fzf +m) &&
  cd "$dir"
}

# Checkout branches or tags with fzf
fco() {
  local tags branches target
  tags=$(
    git tag | awk '{print "\x1b[31;1mtag\x1b[m\t" $1}') || return
  branches=$(
    git branch --all | grep -v HEAD             |
    sed "s/.* //"    | sed "s#remotes/[^/]*/##" |
    sort -u          | awk '{print "\x1b[34;1mbranch\x1b[m\t" $1}') || return
  target=$(
    (echo "$tags"; echo "$branches") |
    fzf-tmux -l30 -- --no-hscroll --ansi +m -d "\t" -n 2) || return
  git checkout $(echo "$target" | awk '{print $2}')
}

# Open tmux and vim in an IDE like layout
function ide() {
  if [ ! -z "$1" ]; then
    cd "$1" || exit
  fi

  tmux new-session -d -s ide 'vim +NERDTree'
  tmux split-window -v -p 10
  tmux split-window -h
  tmux select-pane -t 0
  tmux attach-session -d -t ide
}

# System update
function pacu() {
  # Dotfiles repo
  (cd "${HOME}/dotfiles" && git pull)

  # System tools
  case "$(uname)" in
  'Linux')
    # On Arch Linux, use Pacman and Yaourt
    sudo pacman -Syu --noconfirm && yaourt -Syua --noconfirm
    ;;
  'Darwin')
    # On macOS, use mas and Homebrew in parallel
    (mas upgrade) &
    mas_pid="$!"
    brew update && brew upgrade && brew cleanup
    wait "${mas_pid}"
    ;;
  esac

  # Go
  ("${HOME}/dotfiles/bash/update-go.sh") &
  go_pid="$!"

  # Node.js and npm
  (npm update -g) &
  npm_global_pid="$!"

  wait "${npm_global_pid}"
  npm outdated -g
  ("${HOME}/dotfiles/bash/update-js.sh") &
  npm_pid="$!"

  # Ruby
  (gem update `gem list | cut -d ' ' -f 1`) &
  ruby_pid="$!"

  # Vim
  vim -c 'PlugClean! | PlugUpgrade | PlugUpdate | qa'

  # Wait for all processes to finish
  wait "${npm_pid}"
  wait "${go_pid}"
  wait "${ruby_pid}"

  echo 'System upgrade finished'
}
