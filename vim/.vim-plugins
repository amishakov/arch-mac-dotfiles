" Specify a directory for plugins (for Neovim: ~/.local/share/nvim/plugged)
call plug#begin('~/.local/share/nvim/plugged')

" Status bar
Plug 'vim-airline/vim-airline'
let g:airline_powerline_fonts = 1
let g:airline_skip_empty_sections = 1
set noshowmode

" Git integration
Plug 'tpope/vim-fugitive'

" Edit surrounds
Plug 'tpope/vim-surround'

" Source tree
Plug 'scrooloose/nerdtree'
let NERDTreeShowHidden = 1
map <C-n> :NERDTreeToggle<CR>

" Toggle Comments
Plug 'scrooloose/nerdcommenter'
let g:NERDSpaceDelims = 1

" Auto close braces
Plug 'jiangmiao/auto-pairs'

" Syntax Highlighting
Plug 'neomake/neomake'
if has("autocmd")
  autocmd! BufWritePost,BufEnter * Neomake
endif

" Show Git indicators with line numbers
Plug 'airblade/vim-gitgutter'

" Fuzzy finder
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
nnoremap <C-P> :call FzfOmniFiles()<cr>
fun! FzfOmniFiles()
  call system('git status')
  if v:shell_error
    :Files
  else
    :GFiles
  endif
endfun

" Autocompletion
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
Plug 'carlitux/deoplete-ternjs', { 'do': 'npm install -g tern' }
Plug 'mhartington/deoplete-typescript', { 'do': 'npm install -g typescript' }
Plug 'zchee/deoplete-go', { 'do': 'make'}
let g:deoplete#enable_at_startup = 1

" Golang
Plug 'fatih/vim-go', { 'for': 'go' }
let g:go_fmt_command = 'goimports'

" Typescript
Plug 'leafgarland/typescript-vim', { 'for': 'typescript' }

" Wakatime
Plug 'wakatime/vim-wakatime'

" Initialize plugin system
call plug#end()

